%shadow-hover {
	top: 0;
	box-shadow: 0 1px 3px rgba(0, 0, 0, 0.175);
	transition: box-shadow .3s linear;
	&:hover {
		box-shadow: 0 6px 9px rgba(0, 0, 0, 0.175);;
	}
}

@mixin ripple($color) {
    position: relative;

    &:after {
        content: "";
        display: block;
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        margin-left: 0;
        @include gradient-radial($color 10%, transparent 10.01%);
        background-size: 1000% 1000%;
        background-position: 50%;
        border: none;
        opacity: 0;
        pointer-events: none;
        transition: background .5s, opacity 1s;
    }

    &:active:after {
        background-size: 0% 0%;
        opacity: .2;
        transition: 0s;
    }
}

@mixin _assert-ascending($map, $map-name) {
    $prev-key: null;
    $prev-num: null;
    @each $key, $num in $map {
        @if $prev-num == null {
            // Do nothing
        } @else if not comparable($prev-num, $num) {
            @warn "Potentially invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} whose unit makes it incomparable to #{$prev-num}, the value of the previous key '#{$prev-key}' !";
        } @else if $prev-num >= $num {
            @warn "Invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} which isn't greater than #{$prev-num}, the value of the previous key '#{$prev-key}' !";
        }

        $prev-key: $key;
        $prev-num: $num;
    }
}


// Loading Placeholder keyframe animation
@-moz-keyframes loading {
	100% {
		transform: translateX(100%);
	}
}
@-webkit-keyframes loading {
	100% {
		transform: translateX(100%);
	}
}
@-o-keyframes loading {
	100% {
		transform: translateX(100%);
	}
}
@keyframes loading {
	100% {
		transform: translateX(100%);
	}
}

// star animation
@keyframes animStar {
	from {
		transform: translateY(0px);
	}
	to {
		transform: translateY(-2000px);
	}
}

.isotope,
.isotope .isotope-item {
	/* change duration value to whatever you like */
	transition-duration: 0.5s;
}

.isotope {
	transition-property: height, width;
}

.isotope .isotope-item {
	transition-property: transform, opacity;
}

/**** disabling Isotope CSS3 transitions ****/
.isotope.no-transition,
.isotope.no-transition .isotope-item,
.isotope .isotope-item.no-transition {
	transition-duration: 0s;
}